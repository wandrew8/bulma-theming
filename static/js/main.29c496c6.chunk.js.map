{"version":3,"sources":["components/Header.js","pages/Home.js","pages/Search.js","pages/TopMovies.js","pages/Movie.js","App.js","serviceWorker.js","index.js"],"names":["Header","useState","isActive","setIsActive","className","role","aria-label","src","alt","width","height","onClick","to","Home","Search","TopMovies","Movie","App","basename","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wQAGe,SAASA,IAAU,IAAD,EACGC,oBAAS,GADZ,mBACtBC,EADsB,KACZC,EADY,KAO7B,OACI,yBAAKC,UAAU,SAASC,KAAK,aAAaC,aAAW,uBACjD,uBAAGF,UAAU,eACT,yBAAKG,IAAI,yCAAyCC,IAAI,sEAAsEC,MAAM,MAAMC,OAAO,QAGnJ,yBAAKN,UAAWF,EAAW,qCAAuC,4BAC9D,uBAAGE,UAAU,cAAcO,QAXnB,WAChBR,GAAaD,KAUL,cAGA,yBAAKE,UAAU,mBACf,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,eAAvB,QAGA,kBAAC,IAAD,CAAMQ,GAAG,UAAUR,UAAU,eAA7B,UAGA,kBAAC,IAAD,CAAMQ,GAAG,aAAaR,UAAU,eAAhC,iBCvBD,SAASS,IACpB,OACI,6BACI,kBAAC,EAAD,OCHG,SAASC,IACpB,OACI,6BACI,kBAAC,EAAD,OCHG,SAASC,IACpB,OACI,6BACI,kBAAC,EAAD,OCHG,SAASC,IACpB,OACI,6BACI,kBAAC,EAAD,O,WCeGC,MAbf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAS,iBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWR,IACjC,kBAAC,IAAD,CAAOO,KAAK,oBAAoBC,UAAWL,IAC3C,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,cAAcC,UAAWN,OCJvBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.29c496c6.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    const [isActive, setIsActive] = useState(false)\r\n\r\n    const showOptions = () => {\r\n        setIsActive(!isActive)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"dropdown navigation\">\r\n            <a className=\"navbar-item\">\r\n                <img src=\"https://bulma.io/images/bulma-logo.png\" alt=\"Bulma: Free, open source, and modern CSS framework based on Flexbox\" width=\"112\" height=\"28\"/>\r\n            </a>\r\n\r\n            <div className={isActive ? \"navbar-item has-dropdown is-active\" : \"navbar-item has-dropdown\"}>\r\n                <a className=\"navbar-link\" onClick={showOptions}>\r\n                    Navigation\r\n                </a>\r\n                <div className=\"navbar-dropdown\">\r\n                <Link to=\"/\" className=\"navbar-item\">\r\n                    Home\r\n                </Link>\r\n                <Link to=\"/search\" className=\"navbar-item\">\r\n                    Search\r\n                </Link>\r\n                <Link to=\"top-movies\" className=\"navbar-item\">\r\n                    Top Movies\r\n                </Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Heading from '../components/Header';\r\n\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <Heading />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Heading from '../components/Header';\r\n\r\n\r\nexport default function Search() {\r\n    return (\r\n        <div>\r\n            <Heading />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Heading from '../components/Header';\r\n\r\n\r\nexport default function TopMovies() {\r\n    return (\r\n        <div>\r\n            <Heading />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Heading from '../components/Header';\r\n\r\n\r\nexport default function Movie() {\r\n    return (\r\n        <div>\r\n            <Heading />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.scss';\nimport Header from './components/Header'\nimport Home from './pages/Home'\nimport Search from './pages/Search'\nimport TopMovies from './pages/TopMovies'\nimport Movie from './pages/Movie'\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router basename=\"/bulma-theme/\">\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/movie/:movieName\" component={Movie} />\n      <Route path=\"/search\" component={Search} />\n      <Route path=\"/top-movies\" component={TopMovies} />\n    </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}